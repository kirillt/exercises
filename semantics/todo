0. Proof корректности компиляции.

1. Emacs macro / standalone утилита для case split.

2. Agda  Reflection -- можно получить тип всего выражения (goal) с помощью quoteGoal x in e.
    a) Может ли ReflectionProofs помочь?
    b) Можно ли как-то применить quoteGoal?
    c) Можно ли анализировать описание семантики?
        * Вроде как нельзя (нужна возможность исследовать induction data type).
        * Но может помочь reflection для значения idt (сделать лемму для использования в Agsy).

3. Idris Reflection -- proof scripts, работает compile-time.
    a) Нельзя использовать все функции из модуля -- придётся делать meta-programming.
    b) Compile-time заполнение goal с помощью тактики -- proof script.
        * reflect tactic_name
        * tactic_name : Tactic
        * пример: effects/Effects.idr

4. Idris run-time -- можно использовать Idris как proof-engine, но пока что нет хорошего API.

5. Backtracking.
